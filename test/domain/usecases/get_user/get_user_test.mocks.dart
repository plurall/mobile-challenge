// Mocks generated by Mockito 5.0.15 from annotations
// in mobile_challenge/test/domain/usecases/get_user/get_user_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mobile_challenge/core/errors/remote_exception.dart' as _i5;
import 'package:mobile_challenge/data/models/user.dart' as _i6;
import 'package:mobile_challenge/data/repositories/search_remote.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [SearchRemoteRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchRemoteRepository extends _i1.Mock
    implements _i3.SearchRemoteRepository {
  MockSearchRemoteRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get domain =>
      (super.noSuchMethod(Invocation.getter(#domain), returnValue: '')
          as String);
  @override
  String get token =>
      (super.noSuchMethod(Invocation.getter(#token), returnValue: '')
          as String);
  @override
  _i4.Future<_i2.Either<_i5.RemoteException, List<_i6.User>>> searchUsers(
          String? search) =>
      (super.noSuchMethod(Invocation.method(#searchUsers, [search]),
              returnValue:
                  Future<_i2.Either<_i5.RemoteException, List<_i6.User>>>.value(
                      _FakeEither_0<_i5.RemoteException, List<_i6.User>>()))
          as _i4.Future<_i2.Either<_i5.RemoteException, List<_i6.User>>>);
  @override
  _i4.Future<_i2.Either<_i5.RemoteException, _i6.User>> getUser(
          String? login) =>
      (super.noSuchMethod(Invocation.method(#getUser, [login]),
          returnValue: Future<_i2.Either<_i5.RemoteException, _i6.User>>.value(
              _FakeEither_0<_i5.RemoteException, _i6.User>())) as _i4
          .Future<_i2.Either<_i5.RemoteException, _i6.User>>);
  @override
  String toString() => super.toString();
}
